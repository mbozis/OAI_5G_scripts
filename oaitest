#!/bin/bash
# DCS LAB
# UOP
# Manolis Bozis Feb 2024
# Open Air Interface 5g NR SA E2E testbed
# Script to check different scenarios on 5G SA E2E link 
# ---!!! run it without root privilages !!!----
# in order to run tests UE needs to have a PDU session established
# to core network
# NETWORK CONFIGURATION
# add to your /etc/hosts file
# amf 192.168.70.132
# ue 192.168.45.8
# 5gcn IP needs to be set accordingly to host OR VM IP 
# (make changes to /etc/hosts file)
# 5gcn VM or actual host needs to have ssh HOST keys installed
# so that to accept password less ssh connections
# ----------------------------
##########COLOR CODES #############################
R='\033[0;31m'   #'0;31' is Red's ANSI color code
G='\033[0;32m'   #'0;32' is Green's ANSI color code
NOCOLOR='\033[0m'
######################## VARIABLES SECTION ###############################
#
ROUTER_IP="195.251.38.129" # router ip for DCS LAB
EXT_DN_IP="192.168.70.135" # Ip of oai-ext-dn container
#EXT_DN_IP="195.251.38.147" # Ip of oai-ext-dn container
PING_COUNT=40 # number of PING command iterations
TCP_WINDOW_SIZE=119MB   # 119MB is the max
TEST_TIME=10            # time interval to perform iperf test
AMF_APP_TIME="20s"      # AMF APP reporting period for connected gNBs and UEs

#
##########################################################################
# If you want to use TCP window size
# use -w ${TCP_WINDOW_SIZE} in iperf
###############################
######### FUCTIONS ############
#### FUNCTION 1 Exit Script ###
exitScript(){
echo -e "exiting....\n"
sleep 2
exit 1
}
############################### FUNCTION 2 Check UE Registration to 5G Network #####
checkUERegistration(){
# check first if 5gcn is reachable 
ping -c 1 5gcn > /dev/null 2>&1
CNHOST=$?
if [ $CNHOST -eq 0 ]
  then
   ssh 5gcn "docker logs oai-amf --since ${AMF_APP_TIME} | grep '5GMM-REGISTERED' -A 5 -B 12" 2>/dev/null
   REGISTERED=$?
#   clear (removed not to lose screen buffer data)
   if [ $REGISTERED -eq 0 ]
     then
       echo -e "${G} UE has been registered successfully${NOCOLOR}\n"
       UE_REGISTERED_FLAG=1 # flag to report successful registration to other functions
     else
       echo -e "${R}UE has not been registered to Core Network${NOCOLOR}\n"
       exitScript
     fi
   else
       echo -e "${R}5G core network host is down or unreachable${NOCOLOR}\n"
       exitScript
fi
# check UE IP assigned address
ping -c 1 ue > /dev/null
NRUEHOST=$?
#NRUEHOST=0  # set to skip connectivity test from lab network
if [ "${NRUEHOST}" -eq '0' ]
   then
   # check if oai_tun interface is UP
   UE_INET=$(ssh ue "ip a  | grep 12.1.1")
   if [ "${UE_INET}" == "" ]
     then 
       echo -e "${R}UE has not been asigned an IP address${NOCOLOR}"
       exitScript
     else
       UE_IP=$(echo ${UE_INET} | tr '/' ' ' | cut -d " " -f 2)
       echo -e "${G}UE has been asigned IP address ${UE_IP}${NOCOLOR}"
     fi
   else
       echo -e "${R}UE host is down or unreachable${NOCOLOR}\n"
       exitScript
fi
}
##########################################################################

#### FUNCTION 3 RTT Tests with ping command ###################
pingtests(){
# do ping connectivity tests from UE side
# ping lab router from UE
echo -e "${G}Starting pinging from UE to lab router${NOCOLOR}\n"
ssh ue "ping ${ROUTER_IP} -c ${PING_COUNT} -I oaitun_ue1"

#  ping test from oai-ext-dn container to UE
echo -e "${G}start pinging from core network to UE${NOCOLOR}\n"
ssh 5gcn "docker exec oai-ext-dn ping $UE_IP -c ${PING_COUNT}"
}
##########################################################################
#### FUNCTION 4 Throughput Test with iperf command in Downlink ###########
iperftestDL(){
# start iperf server deamon on UE side
ssh ue "pgrep iperf >/dev/null"
iperf_RUNNING=$?
if [ ${iperf_RUNNING} -eq 0 ]
then
 echo -e "iperf server is already running\n"
 echo -e "wait a sec to terminate and restart iperf\n"
 ssh ue "pkill iperf"
 sleep 2
fi
 ssh ue "iperf -s -D -u -i1 -B ${UE_IP}"
 iperf_SERVER=$?
  if [ $iperf_SERVER -eq 0 ]
  then
   echo -e "iperf server started succesfully on UE side\n"
  else
   echo -e "iperf server didn't start on UE side\n"
   exitScript
  fi


#
# ssh to 5gcn VM and create traffic from ext-dn container
# 
echo -e "${G}Starting transmitting data on 5G DOWNLINK${NOCOLOR}"
echo -e "${G}Sending DOWNLINK traffic at ${DOWNLINK_SPEED_TEST}bps${NOCOLOR}"
ssh 5gcn "docker exec oai-ext-dn iperf -u -t ${TEST_TIME} -B ${EXT_DN_IP} -i1 -b ${DOWNLINK_SPEED_TEST} -c ${UE_IP} -fm"
echo -e "transmission stoped in 5G DOWNLINK"
# -stop iperf server on UE side
ssh ue "pkill iperf"
sleep 2
# 
}
####################################################################
#### FUNCTION 5 Throughput Test with iperf command in Uplink ############
iperftestUL(){
# start iperf server deamon on oai-ext-dn container 
ssh 5gcn "docker exec oai-ext-dn pgrep iperf >/dev/null"
iperf_RUNNING=$?
if [ ${iperf_RUNNING} -eq 0 ]
then
 echo -e "iperf server is already running\n"
 echo -e "wait a sec to terminate and restart iperf\n"
 ssh 5gcn "docker exec oai-ext-dn pkill -KILL iperf"
 sleep 2
fi
 ssh 5gcn "docker exec oai-ext-dn iperf -s -D -u -i1 -B 192.168.70.135"
 iperf_SERVER=$?
  if [ $iperf_SERVER -eq 0 ]
  then
   echo -e "iperf server started succesfully on oai-ext-dn container\n"
  else
   echo -e "iperf server didn't start on oai-ext-dn container\n"
   exitScript
  fi

# 
# ssh to UE host and create traffic from UE to oai-ext-dn container
# 
echo -e "${G}Starting transmitting data on 5G UPLINK${NOCOLOR}"
echo -e "${G}Sending UPLINK traffic at ${UPLINK_SPEED_TEST}bps${NOCOLOR}"
ssh ue "iperf -u -t ${TEST_TIME} -i1 -fm -B ${UE_IP} -b ${UPLINK_SPEED_TEST} -c ${EXT_DN_IP}"
echo -e "transmission stoped in 5G UPLINK"
# -stop iperf server on UE side
ssh 5gcn "docker exec oai-ext-dn pkill -KILL iperf"
sleep 2
}
###########################################################################
#### FUNCTION 6 Bandwidth Graph with Speedometer Test on 5G oaitun_ue1 interface  ############
speedometer(){
ssh ue 
export DISPLAY=:1
gnome-terminal -x bash -c "speedometer -t oaitun_ue1 -r aoitun_ue1"
exit # exit from ue session
}
###########################################################################
#### FUNCTION 7 print help message  ############
print_help(){
cat <<EOF
UOP - DCS LAB author Manolis Bozis 2023
Testing tool for E2E 5G SA system using Open Air Interface with RFsimulator
or 2 hosts running OAI nrUE and nrgNB respectively, connected to SDRs.
SDR link can be OTA or with RF cables 
Usage:  $0 [OPTION]... [+VALUE] 
  -c, --checkue            check UE registration status to 5G Network  
  -C, --checkngi           check RAN connection to core network
  -u, --uplink [value]     create traffic to uplink. Value needs to be in bps
                           example for 30Mbps: -u 30M   
  -d, --downlink [value]   create traffic to downlink. Value needs to be in bps
                           example for 30Mbps: -d 30M
  -t  --time [value[       time to execute downlink and uplink tests (used with '-d' and '-u' arguments) 
                           [value] is in seconds. If not defined default value is 10
  -r, --rtt                measure rtt executing ping commands in both uplink and
                           downlink
  -h, --help               print this help message
  --dmax                   get downlink throughput
  --umax                   get uplink trhoughput 
EOF
}
######### Function 8 Max Downlink throughput ###################################
checkDownlinkThroughput(){
# start iperf server deamon on UE side
ssh ue "pgrep iperf >/dev/null"
iperf_RUNNING=$?
if [ ${iperf_RUNNING} -eq 0 ]
then
 echo -e "iperf server is already running\n"
 echo -e "wait a sec to terminate and restart iperf\n"
 ssh ue "pkill iperf"
 sleep 2
fi
 ssh ue "iperf -s -D -B $UE_IP"
 iperf_SERVER=$?
  if [ $iperf_SERVER -eq 0 ]
  then
   echo -e "iperf server started succesfully on UE side\n"
  else
   echo -e "iperf server didn't start on UE side\n"
   exitScript
  fi


#
# ssh to 5gcn VM and create traffic from ext-dn container
# 
echo -e "${G}Starting transmitting data on 5G DOWNLINK${NOCOLOR}"
ssh 5gcn "docker exec oai-ext-dn iperf -B ${EXT_DN_IP} -c ${UE_IP} -t ${TEST_TIME}"
echo -e "transmission stoped in 5G DOWNLINK"
# -stop iperf server on UE side
ssh ue "pkill iperf"
sleep 2
# 

}
###########################################################################

######### Function 9 Uplink throughput ###################################

checkUplinkThroughput(){
ssh 5gcn "docker exec oai-ext-dn pgrep iperf >/dev/null"
iperf_RUNNING=$?
if [ ${iperf_RUNNING} -eq 0 ]
then
 echo -e "iperf server is already running\n"
 echo -e "wait a sec to terminate and restart iperf\n"
 ssh 5gcn "docker exec oai-ext-dn pkill -KILL iperf"
 sleep 2
fi
 ssh 5gcn "docker exec oai-ext-dn iperf -s -D -B 192.168.70.135"
 iperf_SERVER=$?
  if [ $iperf_SERVER -eq 0 ]
  then
   echo -e "iperf server started succesfully on oai-ext-dn container\n"
  else
   echo -e "iperf server didn't start on oai-ext-dn container\n"
   exitScript
  fi

# 
# ssh to UE host and create traffic from UE to oai-ext-dn container
# 
echo -e "${G}Starting transmitting data on 5G UPLINK${NOCOLOR}"
ssh ue "iperf -B ${UE_IP} -c ${EXT_DN_IP} -t ${TEST_TIME}"
echo -e "transmission stoped in 5G UPLINK"
# -stop iperf server on UE side
ssh 5gcn "docker exec oai-ext-dn pkill -KILL iperf"
sleep 2

}
###########################################################################

###################### Funcion 10 Check connection of gNB to 5GCN #########
# check if core network is up
check_NGI(){
ping -c 1 amf >/dev/null
AMF_UP=$?
if [ $AMF_UP -eq 0 ]
then
   echo -e "${G}AMF container is reachable${NOCOLOR}\n"
   ssh 5gcn "docker logs oai-amf --since ${AMF_APP_TIME} | grep 'Connected' -A 2 -B 2" 2>/dev/null
   NGI_CONNECTED=$?
   if [ $NGI_CONNECTED -eq 0 ]
   then
   echo -e "${G}gNB succesfully established a connection to AMF${NOCOLOR}\n"
   else
   echo -e "${R}gNB could not establish a connection to AMF. Check you configuration files${NOCOLOR}\n"
   exitScript
   fi
else
   echo -e "${R}AMF container is not accesible. Have you deployed 5GCN containers?${NOCOLOR}\n"
   exitScript
fi
}
###########################################################################


####################### MAIN ##############################################
function main() {
  UE_REGISTERED_FLAG=0 # set the initial value of the flag
  DOIPERFTESTUL=0
  DOIPERFTESTDL=0
  TEST_TIME=5
if [ "$*" == "" ]; then
    >&2 echo -e "${R}No arguments provided. Printing help message.${NOCOLOR}"
    print_help
    exit 1
fi

  until [ -z "$1" ]
  do
    case "$1" in
       -c | --checkue)
            echo "start checking UE registration to 5G network..."
            checkUERegistration
            shift;;
       -C | --checkngi)
            echo "start checking RAN connection to core network..."
            check_NGI
            shift;;
       --umax)
            if [ ${UE_REGISTERED_FLAG} -ne 1 ]
            then
            checkUERegistration       
            fi
            checkUplinkThroughput
            shift;;
       -u | --uplink)
            UPLINK_SPEED_TEST=$2
            if [ ${UE_REGISTERED_FLAG} -ne 1 ]
            then
            checkUERegistration       
            fi
            DOIPERFTESTUL=1
            shift 2;;
       -r | --rtt)
            if [ ${UE_REGISTERED_FLAG} -ne 1 ]
            then
            checkUERegistration       
            fi
            pingtests
            shift;;
       --dmax)
            if [ ${UE_REGISTERED_FLAG} -ne 1 ]
            then
            checkUERegistration       
            fi
            checkDownlinkThroughput
            shift;;
       -d | --downlink)
            DOWNLINK_SPEED_TEST=$2
            if [ ${UE_REGISTERED_FLAG} -ne 1 ]
            then
            checkUERegistration       
            fi        
            DOIPERFTESTDL=1
            shift 2;;
       -t | --time)
            TEST_TIME=$2
            shift 2;;       
	-h | --help)
            print_help
            exit 0;;
        *) 
            exit
            ;;    
    esac
  done
# run uplink and downlink if selected 
if [ ${DOIPERFTESTDL} == 1 ]
then
iperftestDL
fi
if [ ${DOIPERFTESTUL} == 1 ]
then
iperftestUL
fi
#
  }
  
  main "$@"
  
